name: Build and Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build (Node.js 12.x)
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: |
          npm ci
          npm run build
      - name: Publish Artifacts # For use in other jobs in this workflow
        uses: actions/upload-artifact@v2
        with:
          name: simple-env-dist
          path: dist

  versioning:
    name: Versioning
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Determine version bump
        id: determine_bump
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { commits } = await github.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            const commitMessages = commits.map(commit => commit.commit.message);
            const bumpTypes = ['major', 'minor', 'patch'];

            const determineBump = (message) => {
              for (const type of bumpTypes) {
                if (message.includes(`[${type}]`)) {
                  return type;
                }
              }
              return 'patch';
            };

            const bumpType = commitMessages.reduce((type, message) => {
              const newType = determineBump(message);
              if (bumpTypes.indexOf(newType) > bumpTypes.indexOf(type)) {
                return newType;
              }
              return type;
            }, 'patch');

            console.log(`::set-output name=bump_type::${bumpType}`);

      - name: Increment version
        id: increment_version
        run: echo "::set-output name=version::${{ steps.determine_bump.outputs.bump_type }}"

      - name: Create tag
        id: create_tag
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const newTag = `v${{ steps.increment_version.outputs.version }}`;
            const createTag = async () => {
              try {
                await github.git.createRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `refs/tags/${newTag}`,
                  sha: context.sha
                });
                return newTag;
              } catch (error) {
                core.setFailed(`Failed to create tag: ${error.message}`);
              }
            };

            const tag = await createTag();
            console.log(`::set-output name=tag::${tag}`);

  changelog:
    name: Generate Changelog
    needs: [versioning]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate changelog
        run: |
          npm install -g conventional-changelog-cli
          conventional-changelog -p angular -i CHANGELOG.md -s
          git add CHANGELOG.md
          git commit -m "Update changelog" --no-verify

  publish:
    name: Publish to NPM
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [changelog]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Artifact
        uses: actions/download-artifact@v2
        with:
          name: simple-env-dist
          path: dist

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
